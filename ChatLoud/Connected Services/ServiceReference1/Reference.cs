//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ChatLoud.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Channel", Namespace="http://schemas.datacontract.org/2004/07/ChatLoudService.Model")]
    [System.SerializableAttribute()]
    public partial class Channel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ChatLoud.ServiceReference1.GChat[] GChatsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string channelDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string channelNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ChatLoud.ServiceReference1.GChat[] GChats {
            get {
                return this.GChatsField;
            }
            set {
                if ((object.ReferenceEquals(this.GChatsField, value) != true)) {
                    this.GChatsField = value;
                    this.RaisePropertyChanged("GChats");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string channelDescription {
            get {
                return this.channelDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.channelDescriptionField, value) != true)) {
                    this.channelDescriptionField = value;
                    this.RaisePropertyChanged("channelDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string channelName {
            get {
                return this.channelNameField;
            }
            set {
                if ((object.ReferenceEquals(this.channelNameField, value) != true)) {
                    this.channelNameField = value;
                    this.RaisePropertyChanged("channelName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GChat", Namespace="http://schemas.datacontract.org/2004/07/ChatLoudService.Model")]
    [System.SerializableAttribute()]
    public partial class GChat : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ChatLoud.ServiceReference1.AspNetUser AspNetUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ChatLoud.ServiceReference1.Channel ChannelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> channelIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string clientIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string messageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> timeSentField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ChatLoud.ServiceReference1.AspNetUser AspNetUser {
            get {
                return this.AspNetUserField;
            }
            set {
                if ((object.ReferenceEquals(this.AspNetUserField, value) != true)) {
                    this.AspNetUserField = value;
                    this.RaisePropertyChanged("AspNetUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ChatLoud.ServiceReference1.Channel Channel {
            get {
                return this.ChannelField;
            }
            set {
                if ((object.ReferenceEquals(this.ChannelField, value) != true)) {
                    this.ChannelField = value;
                    this.RaisePropertyChanged("Channel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> channelID {
            get {
                return this.channelIDField;
            }
            set {
                if ((this.channelIDField.Equals(value) != true)) {
                    this.channelIDField = value;
                    this.RaisePropertyChanged("channelID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string clientID {
            get {
                return this.clientIDField;
            }
            set {
                if ((object.ReferenceEquals(this.clientIDField, value) != true)) {
                    this.clientIDField = value;
                    this.RaisePropertyChanged("clientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string message {
            get {
                return this.messageField;
            }
            set {
                if ((object.ReferenceEquals(this.messageField, value) != true)) {
                    this.messageField = value;
                    this.RaisePropertyChanged("message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> timeSent {
            get {
                return this.timeSentField;
            }
            set {
                if ((this.timeSentField.Equals(value) != true)) {
                    this.timeSentField = value;
                    this.RaisePropertyChanged("timeSent");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AspNetUser", Namespace="http://schemas.datacontract.org/2004/07/ChatLoudService.Model")]
    [System.SerializableAttribute()]
    public partial class AspNetUser : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccessFailedCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ChatLoud.ServiceReference1.AspNetRole[] AspNetRolesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ChatLoud.ServiceReference1.AspNetUserClaim[] AspNetUserClaimsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ChatLoud.ServiceReference1.AspNetUserLogin[] AspNetUserLoginsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ChatLoud.ServiceReference1.Chat[] ChatsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ChatLoud.ServiceReference1.Chat[] Chats1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EmailConfirmedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ChatLoud.ServiceReference1.GChat[] GChatsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LockoutEnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LockoutEndDateUtcField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ChatLoud.ServiceReference1.OnlineUser OnlineUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordHashField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PhoneNumberConfirmedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SecurityStampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TwoFactorEnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AccessFailedCount {
            get {
                return this.AccessFailedCountField;
            }
            set {
                if ((this.AccessFailedCountField.Equals(value) != true)) {
                    this.AccessFailedCountField = value;
                    this.RaisePropertyChanged("AccessFailedCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ChatLoud.ServiceReference1.AspNetRole[] AspNetRoles {
            get {
                return this.AspNetRolesField;
            }
            set {
                if ((object.ReferenceEquals(this.AspNetRolesField, value) != true)) {
                    this.AspNetRolesField = value;
                    this.RaisePropertyChanged("AspNetRoles");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ChatLoud.ServiceReference1.AspNetUserClaim[] AspNetUserClaims {
            get {
                return this.AspNetUserClaimsField;
            }
            set {
                if ((object.ReferenceEquals(this.AspNetUserClaimsField, value) != true)) {
                    this.AspNetUserClaimsField = value;
                    this.RaisePropertyChanged("AspNetUserClaims");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ChatLoud.ServiceReference1.AspNetUserLogin[] AspNetUserLogins {
            get {
                return this.AspNetUserLoginsField;
            }
            set {
                if ((object.ReferenceEquals(this.AspNetUserLoginsField, value) != true)) {
                    this.AspNetUserLoginsField = value;
                    this.RaisePropertyChanged("AspNetUserLogins");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ChatLoud.ServiceReference1.Chat[] Chats {
            get {
                return this.ChatsField;
            }
            set {
                if ((object.ReferenceEquals(this.ChatsField, value) != true)) {
                    this.ChatsField = value;
                    this.RaisePropertyChanged("Chats");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ChatLoud.ServiceReference1.Chat[] Chats1 {
            get {
                return this.Chats1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Chats1Field, value) != true)) {
                    this.Chats1Field = value;
                    this.RaisePropertyChanged("Chats1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EmailConfirmed {
            get {
                return this.EmailConfirmedField;
            }
            set {
                if ((this.EmailConfirmedField.Equals(value) != true)) {
                    this.EmailConfirmedField = value;
                    this.RaisePropertyChanged("EmailConfirmed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ChatLoud.ServiceReference1.GChat[] GChats {
            get {
                return this.GChatsField;
            }
            set {
                if ((object.ReferenceEquals(this.GChatsField, value) != true)) {
                    this.GChatsField = value;
                    this.RaisePropertyChanged("GChats");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LockoutEnabled {
            get {
                return this.LockoutEnabledField;
            }
            set {
                if ((this.LockoutEnabledField.Equals(value) != true)) {
                    this.LockoutEnabledField = value;
                    this.RaisePropertyChanged("LockoutEnabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LockoutEndDateUtc {
            get {
                return this.LockoutEndDateUtcField;
            }
            set {
                if ((this.LockoutEndDateUtcField.Equals(value) != true)) {
                    this.LockoutEndDateUtcField = value;
                    this.RaisePropertyChanged("LockoutEndDateUtc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ChatLoud.ServiceReference1.OnlineUser OnlineUser {
            get {
                return this.OnlineUserField;
            }
            set {
                if ((object.ReferenceEquals(this.OnlineUserField, value) != true)) {
                    this.OnlineUserField = value;
                    this.RaisePropertyChanged("OnlineUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PasswordHash {
            get {
                return this.PasswordHashField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordHashField, value) != true)) {
                    this.PasswordHashField = value;
                    this.RaisePropertyChanged("PasswordHash");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumberField, value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PhoneNumberConfirmed {
            get {
                return this.PhoneNumberConfirmedField;
            }
            set {
                if ((this.PhoneNumberConfirmedField.Equals(value) != true)) {
                    this.PhoneNumberConfirmedField = value;
                    this.RaisePropertyChanged("PhoneNumberConfirmed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecurityStamp {
            get {
                return this.SecurityStampField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityStampField, value) != true)) {
                    this.SecurityStampField = value;
                    this.RaisePropertyChanged("SecurityStamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TwoFactorEnabled {
            get {
                return this.TwoFactorEnabledField;
            }
            set {
                if ((this.TwoFactorEnabledField.Equals(value) != true)) {
                    this.TwoFactorEnabledField = value;
                    this.RaisePropertyChanged("TwoFactorEnabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OnlineUser", Namespace="http://schemas.datacontract.org/2004/07/ChatLoudService.Model")]
    [System.SerializableAttribute()]
    public partial class OnlineUser : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ChatLoud.ServiceReference1.AspNetUser AspNetUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConnIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ChatLoud.ServiceReference1.AspNetUser AspNetUser {
            get {
                return this.AspNetUserField;
            }
            set {
                if ((object.ReferenceEquals(this.AspNetUserField, value) != true)) {
                    this.AspNetUserField = value;
                    this.RaisePropertyChanged("AspNetUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConnId {
            get {
                return this.ConnIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ConnIdField, value) != true)) {
                    this.ConnIdField = value;
                    this.RaisePropertyChanged("ConnId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AspNetRole", Namespace="http://schemas.datacontract.org/2004/07/ChatLoudService.Model")]
    [System.SerializableAttribute()]
    public partial class AspNetRole : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ChatLoud.ServiceReference1.AspNetUser[] AspNetUsersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ChatLoud.ServiceReference1.AspNetUser[] AspNetUsers {
            get {
                return this.AspNetUsersField;
            }
            set {
                if ((object.ReferenceEquals(this.AspNetUsersField, value) != true)) {
                    this.AspNetUsersField = value;
                    this.RaisePropertyChanged("AspNetUsers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AspNetUserClaim", Namespace="http://schemas.datacontract.org/2004/07/ChatLoudService.Model")]
    [System.SerializableAttribute()]
    public partial class AspNetUserClaim : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ChatLoud.ServiceReference1.AspNetUser AspNetUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClaimTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClaimValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ChatLoud.ServiceReference1.AspNetUser AspNetUser {
            get {
                return this.AspNetUserField;
            }
            set {
                if ((object.ReferenceEquals(this.AspNetUserField, value) != true)) {
                    this.AspNetUserField = value;
                    this.RaisePropertyChanged("AspNetUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClaimType {
            get {
                return this.ClaimTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ClaimTypeField, value) != true)) {
                    this.ClaimTypeField = value;
                    this.RaisePropertyChanged("ClaimType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClaimValue {
            get {
                return this.ClaimValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ClaimValueField, value) != true)) {
                    this.ClaimValueField = value;
                    this.RaisePropertyChanged("ClaimValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIdField, value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AspNetUserLogin", Namespace="http://schemas.datacontract.org/2004/07/ChatLoudService.Model")]
    [System.SerializableAttribute()]
    public partial class AspNetUserLogin : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ChatLoud.ServiceReference1.AspNetUser AspNetUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginProviderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProviderKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ChatLoud.ServiceReference1.AspNetUser AspNetUser {
            get {
                return this.AspNetUserField;
            }
            set {
                if ((object.ReferenceEquals(this.AspNetUserField, value) != true)) {
                    this.AspNetUserField = value;
                    this.RaisePropertyChanged("AspNetUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoginProvider {
            get {
                return this.LoginProviderField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginProviderField, value) != true)) {
                    this.LoginProviderField = value;
                    this.RaisePropertyChanged("LoginProvider");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProviderKey {
            get {
                return this.ProviderKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.ProviderKeyField, value) != true)) {
                    this.ProviderKeyField = value;
                    this.RaisePropertyChanged("ProviderKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIdField, value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Chat", Namespace="http://schemas.datacontract.org/2004/07/ChatLoudService.Model")]
    [System.SerializableAttribute()]
    public partial class Chat : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ChatLoud.ServiceReference1.AspNetUser AspNetUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ChatLoud.ServiceReference1.AspNetUser AspNetUser1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string clientIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string messageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string recipientIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime timeSentField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ChatLoud.ServiceReference1.AspNetUser AspNetUser {
            get {
                return this.AspNetUserField;
            }
            set {
                if ((object.ReferenceEquals(this.AspNetUserField, value) != true)) {
                    this.AspNetUserField = value;
                    this.RaisePropertyChanged("AspNetUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ChatLoud.ServiceReference1.AspNetUser AspNetUser1 {
            get {
                return this.AspNetUser1Field;
            }
            set {
                if ((object.ReferenceEquals(this.AspNetUser1Field, value) != true)) {
                    this.AspNetUser1Field = value;
                    this.RaisePropertyChanged("AspNetUser1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string clientID {
            get {
                return this.clientIDField;
            }
            set {
                if ((object.ReferenceEquals(this.clientIDField, value) != true)) {
                    this.clientIDField = value;
                    this.RaisePropertyChanged("clientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string message {
            get {
                return this.messageField;
            }
            set {
                if ((object.ReferenceEquals(this.messageField, value) != true)) {
                    this.messageField = value;
                    this.RaisePropertyChanged("message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string recipientID {
            get {
                return this.recipientIDField;
            }
            set {
                if ((object.ReferenceEquals(this.recipientIDField, value) != true)) {
                    this.recipientIDField = value;
                    this.RaisePropertyChanged("recipientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime timeSent {
            get {
                return this.timeSentField;
            }
            set {
                if ((this.timeSentField.Equals(value) != true)) {
                    this.timeSentField = value;
                    this.RaisePropertyChanged("timeSent");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserProfile", Namespace="http://schemas.datacontract.org/2004/07/ChatLoudService")]
    [System.SerializableAttribute()]
    public partial class UserProfile : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OnlineUserModel", Namespace="http://schemas.datacontract.org/2004/07/ChatLoudService.Model")]
    [System.SerializableAttribute()]
    public partial class OnlineUserModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ChatLoud.ServiceReference1.AspNetUser AspNetUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConnIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ChatLoud.ServiceReference1.AspNetUser AspNetUser {
            get {
                return this.AspNetUserField;
            }
            set {
                if ((object.ReferenceEquals(this.AspNetUserField, value) != true)) {
                    this.AspNetUserField = value;
                    this.RaisePropertyChanged("AspNetUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConnId {
            get {
                return this.ConnIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ConnIdField, value) != true)) {
                    this.ConnIdField = value;
                    this.RaisePropertyChanged("ConnId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetChannels", ReplyAction="http://tempuri.org/IService1/GetChannelsResponse")]
        ChatLoud.ServiceReference1.Channel[] GetChannels();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetChannels", ReplyAction="http://tempuri.org/IService1/GetChannelsResponse")]
        System.Threading.Tasks.Task<ChatLoud.ServiceReference1.Channel[]> GetChannelsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUsers", ReplyAction="http://tempuri.org/IService1/GetUsersResponse")]
        ChatLoud.ServiceReference1.AspNetUser[] GetUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUsers", ReplyAction="http://tempuri.org/IService1/GetUsersResponse")]
        System.Threading.Tasks.Task<ChatLoud.ServiceReference1.AspNetUser[]> GetUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetSearchedUsers", ReplyAction="http://tempuri.org/IService1/GetSearchedUsersResponse")]
        ChatLoud.ServiceReference1.UserProfile[] GetSearchedUsers(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetSearchedUsers", ReplyAction="http://tempuri.org/IService1/GetSearchedUsersResponse")]
        System.Threading.Tasks.Task<ChatLoud.ServiceReference1.UserProfile[]> GetSearchedUsersAsync(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUserProfile", ReplyAction="http://tempuri.org/IService1/GetUserProfileResponse")]
        ChatLoud.ServiceReference1.UserProfile GetUserProfile(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUserProfile", ReplyAction="http://tempuri.org/IService1/GetUserProfileResponse")]
        System.Threading.Tasks.Task<ChatLoud.ServiceReference1.UserProfile> GetUserProfileAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUserProfileByUserName", ReplyAction="http://tempuri.org/IService1/GetUserProfileByUserNameResponse")]
        ChatLoud.ServiceReference1.UserProfile GetUserProfileByUserName(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUserProfileByUserName", ReplyAction="http://tempuri.org/IService1/GetUserProfileByUserNameResponse")]
        System.Threading.Tasks.Task<ChatLoud.ServiceReference1.UserProfile> GetUserProfileByUserNameAsync(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetOnlineUsers", ReplyAction="http://tempuri.org/IService1/GetOnlineUsersResponse")]
        ChatLoud.ServiceReference1.OnlineUserModel[] GetOnlineUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetOnlineUsers", ReplyAction="http://tempuri.org/IService1/GetOnlineUsersResponse")]
        System.Threading.Tasks.Task<ChatLoud.ServiceReference1.OnlineUserModel[]> GetOnlineUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ConnectUser", ReplyAction="http://tempuri.org/IService1/ConnectUserResponse")]
        void ConnectUser(ChatLoud.ServiceReference1.OnlineUser online);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ConnectUser", ReplyAction="http://tempuri.org/IService1/ConnectUserResponse")]
        System.Threading.Tasks.Task ConnectUserAsync(ChatLoud.ServiceReference1.OnlineUser online);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DisconnectUser", ReplyAction="http://tempuri.org/IService1/DisconnectUserResponse")]
        void DisconnectUser(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DisconnectUser", ReplyAction="http://tempuri.org/IService1/DisconnectUserResponse")]
        System.Threading.Tasks.Task DisconnectUserAsync(string id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : ChatLoud.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<ChatLoud.ServiceReference1.IService1>, ChatLoud.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ChatLoud.ServiceReference1.Channel[] GetChannels() {
            return base.Channel.GetChannels();
        }
        
        public System.Threading.Tasks.Task<ChatLoud.ServiceReference1.Channel[]> GetChannelsAsync() {
            return base.Channel.GetChannelsAsync();
        }
        
        public ChatLoud.ServiceReference1.AspNetUser[] GetUsers() {
            return base.Channel.GetUsers();
        }
        
        public System.Threading.Tasks.Task<ChatLoud.ServiceReference1.AspNetUser[]> GetUsersAsync() {
            return base.Channel.GetUsersAsync();
        }
        
        public ChatLoud.ServiceReference1.UserProfile[] GetSearchedUsers(string userName) {
            return base.Channel.GetSearchedUsers(userName);
        }
        
        public System.Threading.Tasks.Task<ChatLoud.ServiceReference1.UserProfile[]> GetSearchedUsersAsync(string userName) {
            return base.Channel.GetSearchedUsersAsync(userName);
        }
        
        public ChatLoud.ServiceReference1.UserProfile GetUserProfile(string id) {
            return base.Channel.GetUserProfile(id);
        }
        
        public System.Threading.Tasks.Task<ChatLoud.ServiceReference1.UserProfile> GetUserProfileAsync(string id) {
            return base.Channel.GetUserProfileAsync(id);
        }
        
        public ChatLoud.ServiceReference1.UserProfile GetUserProfileByUserName(string userName) {
            return base.Channel.GetUserProfileByUserName(userName);
        }
        
        public System.Threading.Tasks.Task<ChatLoud.ServiceReference1.UserProfile> GetUserProfileByUserNameAsync(string userName) {
            return base.Channel.GetUserProfileByUserNameAsync(userName);
        }
        
        public ChatLoud.ServiceReference1.OnlineUserModel[] GetOnlineUsers() {
            return base.Channel.GetOnlineUsers();
        }
        
        public System.Threading.Tasks.Task<ChatLoud.ServiceReference1.OnlineUserModel[]> GetOnlineUsersAsync() {
            return base.Channel.GetOnlineUsersAsync();
        }
        
        public void ConnectUser(ChatLoud.ServiceReference1.OnlineUser online) {
            base.Channel.ConnectUser(online);
        }
        
        public System.Threading.Tasks.Task ConnectUserAsync(ChatLoud.ServiceReference1.OnlineUser online) {
            return base.Channel.ConnectUserAsync(online);
        }
        
        public void DisconnectUser(string id) {
            base.Channel.DisconnectUser(id);
        }
        
        public System.Threading.Tasks.Task DisconnectUserAsync(string id) {
            return base.Channel.DisconnectUserAsync(id);
        }
    }
}
